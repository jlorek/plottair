
<div id="app">
  <h1>{{ message }}</h1>
  <ul>
  <li v-for="cmd in hpglCommands">
    {{ cmd }}
  </li>
</ul>

  <div id="messages"></div>
  <input id="chat-input" type="text" class="form-control" v-on:keypress="onReturn" v-model="command"></input>
</div>

<script language="javascript">
(function() {

let app = new Vue({
  el: '#app',
  data: {
    message: "Hello Socket!",
    command: "",
    hpglCommands: []
  },
  methods: {
    onReturn: function(event) {
      if (event.keyCode === 13) {
        channel.push("new_msg", {body: app.command}, 1000)
          //.receive("ok", (msg) => console.log("created message", msg))
          //.receive("error", (reasons) => console.log("create failed", reasons))
          //.receive("timeout", () => console.log("Networking issue..."))
        app.command = ""
      }
    }
  }
});

let chatInput = document.querySelector("#chat-input")
let messagesContainer = document.querySelector("#messages")

//import {Socket} from "phoenix"
//import socket from "./socket"
let socket = new Phoenix.Socket("/socket")
socket.connect()

// Now that you are connected, you can join channels with a topic:
let channel = socket.channel("room:lobby", {})

channel.join()
  .receive("ok", resp => { console.log("Joined successfully", resp) })
  .receive("error", resp => { console.log("Unable to join", resp) })
  .receive("timeout", () => console.log("Networking issue. Still waiting..."))

channel.on("new_msg", payload => {
  app.hpglCommands.push(payload.body);
  //let messageItem = document.createElement("li")
  //messageItem.innerText = `[${Date()}] ${payload.body}`
  //messagesContainer.appendChild(messageItem)
})

})();
</script>
